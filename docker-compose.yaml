version: "3.8"

volumes:
  mysql_data:
  redisdata:
  prometheus_data: {}
  grafana_data: {}

services:
  mysqldb:
    build: ./db
    env_file:
      - "./db/db.env"
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  backend:
    build: ./backend
    command: >
      bash -c "python wait_mysql.py &&
               python manage.py makemigrations &&
               python manage.py migrate &&
               python manage.py loaddata fixture.json &&
               gunicorn backend.wsgi:application --bind 0.0.0.0:8080" &&
               
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
    depends_on:
      - mysqldb
      - redis
    links:
      - mysqldb
  
  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - backend

  redis:
    container_name: redis
    image: redis:latest
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - 'redisdata:/data'

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    ports:
      - "5672:5672" # Default Port
      - "15672:15672" # For UI
    expose:
      - "15672"

  celery_worker:
    container_name: celery_worker
    build:
      context: ./backend
      dockerfile: dockerfile
    volumes:
      - ./backend:/app
    ports: []
    depends_on:
      - rabbitmq
      - redis
      - backend
    environment:
      - C_FORCE_ROOT=true
    command: sh -c "python wait_mysql.py &&
                    celery -A backend worker --loglevel=info"


  prometheus:
    image: prom/prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    # network_mode: host
    restart: always
  
  grafana:
    image: grafana/grafana
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    # network_mode: host
    restart: always





  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   volumes:
  #     - ./etc/prometheus:/etc/prometheus/
  #   ports:
  #     - 9090:9090
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     # - '--web.console.templates etc/consoles/'
  #     # - '--web.console.libraries ~/etc/prometheus/console_libraries/'
    # restart: always

  # grafana:
  #   image: "grafana/grafana"
  #   container_name: grafana
  #   ports:
  #     - "3100:3100"
  #   volumes:
  #     - ./etc/grafana:/etc/grafana/provisioning/datasources
  #     - ./etc/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
  #     # - ./etc/dashboards:/etc/grafana/dashboards
  #   environment:
  #     GF_AUTH_ANONYMOUS_ENABLED: "true"
  #     GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
  #     GF_AUTH_DISABLE_LOGIN_FORM: "true"
  #   restart: always
  #   depends_on:
  #     - prometheus


  # grafana:
  #   image: gram/grafana
  #   container_name: grafana
  #   restart: always
  #   volumes:
  #     - ./etc/grafana:etc/grafana/dashsoure.yml
  #   ports:
  #     - 3100:3100
  #   depends_on:
  #     - prometheus
  #   environment:
  #     GF_AUTH_ANONYMOUS_ENABLED: "true"
  #     GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
  #     GF_AUTH_DISABLE_LOGIN_FORM: "true"
  